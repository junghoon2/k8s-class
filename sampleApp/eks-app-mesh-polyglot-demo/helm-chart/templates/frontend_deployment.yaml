apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.frontend.name }}
  namespace: {{ .Values.frontend.namespace }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.frontend.name }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '9000'
      labels:
        app: {{ .Values.frontend.name }}
    spec:
      containers:
        - name: {{ .Values.frontend.name }}
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.frontend.service.targetPort }}
              protocol: TCP
          {{- if .Values.frontend.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.frontend.livenessProbe.path }}
              port: {{ .Values.frontend.livenessProbe.port }}
            initialDelaySeconds: {{ .Values.frontend.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.frontend.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.frontend.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.frontend.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.frontend.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.frontend.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.frontend.readinessProbe.path }}
              port: {{ .Values.frontend.readinessProbe.port }}
            initialDelaySeconds: {{ .Values.frontend.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.frontend.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.frontend.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.frontend.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.frontend.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.frontend.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.frontend.startupProbe.path }}
              port: {{ .Values.frontend.startupProbe.port }}
            initialDelaySeconds: {{ .Values.frontend.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.frontend.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.frontend.startupProbe.timeoutSeconds }}
            successThreshold: {{ .Values.frontend.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.frontend.startupProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.frontend.security }}
          securityContext: 
            {{- toYaml .Values.frontend.securityContext | nindent 12}}
          {{- end }}
          env:
            {{- toYaml .Values.frontend.env | nindent 12 }}
          resources:
            {{- toYaml .Values.frontend.resources | nindent 12 }}
      {{- with .Values.frontend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.frontend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.frontend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
