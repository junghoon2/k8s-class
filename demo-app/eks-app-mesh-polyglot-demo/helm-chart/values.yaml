# Default values for helm-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

detail:
  replicaCount: 1
  namespace: workshop
  name: proddetail

  image:
    repository: public.ecr.aws/u2g6w7p2/eks-workshop-demo/catalog_detail
    tag: "1.0"
    pullPolicy: Always
  
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    targetPort: 3000

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: proddetail.local
        paths: []

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  livenessProbe:
    enabled: true
    path: /ping
    port: 3000
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 3
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  startupProbe:
    enabled: false
  #   port: 3000
  #   path: /ping
  #   initialDelaySeconds: 10
  #   periodSeconds: 10
  #   timeoutSeconds: 5
  #   failureThreshold: 1
  #   successThreshold: 1

  env:
    - name: AWS_XRAY_DAEMON_ADDRESS
      value: xray-service.default:2000
      
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 512Mi
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
  #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}
  
catalog:
  serviceAccountName:
    enabled: false
  volume:
    enabled: false
  replicaCount: 1
  namespace: workshop
  name: prodcatalog

  image:
    repository: public.ecr.aws/u2g6w7p2/eks-workshop-demo/product_catalog
    tag: "1.0"
    pullPolicy: Always

  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    targetPort: 5000

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: prodcatalog.local
        paths: []

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  livenessProbe:
    enabled: true
    path: /products/ping
    port: 5000
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    enabled: true
    path: /products/ping
    port: 5000
    initialDelaySeconds: 5
    periodSeconds: 3
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  startupProbe:
    enabled: false
  #   port: 5000
  #   path: /products/ping
  #   initialDelaySeconds: 10
  #   periodSeconds: 10
  #   timeoutSeconds: 5
  #   failureThreshold: 1
  #   successThreshold: 1
    
  env:
    - name: AGG_APP_URL
      value: "http://proddetail.workshop:3000/catalogDetail"
    - name: AWS_XRAY_DAEMON_ADDRESS
      value: xray-service.default:2000
    - name: DATABASE_SERVICE_URL
      value: mysql.workshop
      
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
  #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

frontend:
  replicaCount: 1
  namespace: workshop
  name: frontend
  lbType: alb

  image:
    repository: public.ecr.aws/u2g6w7p2/eks-workshop-demo/frontend_node
    tag: "2.0"
    pullPolicy: Always

  nameOverride: ""
  fullnameOverride: ""

  service:
    type: LoadBalancer
    targetPort: 9000
    port: 80
    name: "http"

  selector:
    app: frontend

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: frontend.local
        paths: []

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  livenessProbe:
    enabled: true
    path: /ping
    port: 9000
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    enabled: true
    path: /ping
    port: 9000
    initialDelaySeconds: 5
    periodSeconds: 3
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  startupProbe:
    enabled: false
  #   port: 9000
  #   path: /ping
  #   initialDelaySeconds: 10
  #   periodSeconds: 10
  #   timeoutSeconds: 5
  #   failureThreshold: 1
  #   successThreshold: 1
    
  env:
    - name: BASE_URL
      value: "http://prodcatalog.workshop:5000/products/"
    - name: AWS_XRAY_DAEMON_ADDRESS
      value: xray-service.default:2000
    
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

namespace: {}
