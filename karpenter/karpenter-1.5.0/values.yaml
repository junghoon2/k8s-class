# helm upgrade --install karpenter oci://public.ecr.aws/karpenter/karpenter --version "1.5.0" --namespace "karpenter" --create-namespace -f values.yaml
# helm diff upgrade karpenter oci://public.ecr.aws/karpenter/karpenter --version "1.5.0" --namespace "karpenter" -f values.yaml

# 헬름 설치 전 SQS 큐 생성
# aws sqs create-queue --queue-name "Karpenter-eks-test" --region ap-northeast-2 --profile playground

# Role에 SQS 정책 추가
# aws iam put-role-policy --role-name KarpenterControllerRole-eks-test --policy-name SQSInterruptionAccess --policy-document file://sqs-policy.json --profile playground

# -- Global Settings to configure Karpenter
settings:
  # -- Cluster name.
  clusterName: "test-eks-cluster"
  interruptionQueue: "Karpenter-test-eks-cluster" # SQS 큐가 없으면 비활성화
  featureGates:
    spotToSpotConsolidation: true

controller:
  resources:
    requests:
      cpu: 100m
      memory: 1Gi
    limits:
      cpu: 1
      memory: 1Gi

serviceAccount:
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::516696002612:role/KarpenterController-test-eks-cluster"

serviceMonitor:
  enabled: true
# -- Affinity rules for scheduling the pod. If an explicit label selector is not provided for pod affinity or pod anti-affinity one will be created from the pod selector labels.
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: karpenter.sh/nodepool
              operator: DoesNotExist
        - matchExpressions:
            - key: eks.amazonaws.com/compute-type
              operator: NotIn
              values:
                - fargate
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - topologyKey: "kubernetes.io/hostname"
