{{- if .Values.configMap.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "starter-template.fullname" . }}-config
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "starter-template.labels" . | nindent 4 }}
  {{- with (include "starter-template.annotations" .) }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
data:
  {{- range $key, $value := .Values.configMap.data }}
  {{ $key }}: {{ $value | quote }}
  {{- end }}
{{- end }}
---
{{- if .Values.volumeMounts }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "starter-template.labels" . | nindent 4 }}
data:
  nginx.conf: |
    worker_processes auto;
    error_log /tmp/error.log warn;
    pid /tmp/nginx.pid;
    
    events {
        worker_connections 1024;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
                 access_log /tmp/access.log main;
        
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        
        server {
            listen 8080;
            server_name localhost;
            root /usr/share/nginx/html;
            index index.html index.htm;
            
            # Health check endpoints
            location /health {
                access_log off;
                return 200 'healthy\n';
                add_header Content-Type text/plain;
            }
            
            location /ready {
                access_log off;
                return 200 'ready\n';
                add_header Content-Type text/plain;
            }
            
            location / {
                try_files $uri $uri/ =404;
            }
            
            error_page 404 /404.html;
            error_page 500 502 503 504 /50x.html;
            location = /50x.html {
                root /usr/share/nginx/html;
            }
        }
    }
{{- end }} 