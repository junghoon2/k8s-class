defaultRules:
  create: true
  rules:
    etcd: false
    kubeApiserverAvailability: false
    kubeApiserverBurnrate: false
    kubeApiserverHistogram: false
    kubeApiserverSlos: false
    kubeControllerManager: false
    kubeSchedulerAlerting: false
    kubeSchedulerRecording: false
    windows: false

## Configuration for alertmanager
alertmanager:
  enabled: true
  config:
    route:
      group_by: ['namespace']
      group_wait: 30s
      group_interval: 2m
      repeat_interval: 6h
      receiver: 'slack-notifications'
      routes:
      - receiver: 'slack-notifications'
        matchers:
          - alertname =~ "InfoInhibitor|Watchdog"
    receivers:
    - name: 'slack-notifications'
      slack_configs:
      - api_url: "{{ SLACK_API }}" # 여기에 Slack Webhook URL을 넣습니다.
        channel: '#alert-grafana-jerry-test' # 메시지를 보낼 Slack 채널
        send_resolved: true
        title: '{{ template "slack.default.title" . }}'
        text: "summary: {{ .CommonAnnotations.summary }}\ndescription: {{ .CommonAnnotations.description }}"

grafana:
  enabled: true
  defaultDashboardsTimezone: Asia/Seoul
  ingress:
    enabled: true
    ingressClassName: alb
    annotations:
      alb.ingress.kubernetes.io/scheme: internet-facing # internet-facing or internal
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
      alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:516696002612:certificate/33cf6410-65a4-4c28-b490-c7fba1a5289e
      alb.ingress.kubernetes.io/success-codes: 200-399
      alb.ingress.kubernetes.io/group.name: "my-test"
      external-dns.alpha.kubernetes.io/hostname: grafana.jerryljh.me
    hosts:
    - grafana.jerryljh.me
    paths:
    - /*
  persistence:
    type: pvc
    enabled: true
    accessModes:
    - ReadWriteOnce
    size: 5Gi

prometheus:
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
    retention: 5d
    retentionSize: 10GiB
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: ebs-sc
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
