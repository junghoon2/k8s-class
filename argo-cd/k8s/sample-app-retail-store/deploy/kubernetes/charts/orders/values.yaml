# Default values for orders.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: public.ecr.aws/aws-containers/retail-store-sample-orders
  pullPolicy: IfNotPresent
  tag: 0.2.0

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80

resources:
  limits:
    memory: 512Mi
  requests:
    cpu: 128m
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

metrics:
  enabled: true
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/actuator/prometheus"

configMap:
  create: true
  name:

mysql:
  create: true

  database: orders

  endpoint: ""

  secret:
    create: true
    name: orders-db
    username: orders
    password: ""

  reader:
    endpoint: ""
    secret:
      create: false
      name: orders-db
      username: orders
      password: ""

  image:
    repository: mysql
    pullPolicy: IfNotPresent
    tag: "5.7"

  service:
    type: ClusterIP
    port: 3306

  podAnnotations: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

rabbitmq:
  create: true

  address: ""
  
  secret:
    create: true
    name: orders-rabbitmq
    username: ""
    password: ""

  image:
    repository: "rabbitmq"
    pullPolicy: IfNotPresent
    tag: "3-management"

  service:
    type: ClusterIP
    amqp:
      port: 5672
    http:
      port: 15672

  podAnnotations: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

securityGroups:
  create: false

  securityGroupIds: []