# helm install argocd argo/argo-cd -n argocd -f values.yaml --version 8.1.0
# helm diff upgrade argocd argo/argo-cd -n argocd -f values.yaml --version 8.1.0

global:
  domain: argocd.aifordevops.store # 기본값이 example.com이야!
  networkPolicy:
    create: true
    defaultDenyIngress: false

server:
  ingress:
    enabled: true
    ingressClassName: "alb" # 또는 alb, traefik 등
    hostname: argocd.aifordevops.store
    annotations:
      # ALB Controller 설정
      alb.ingress.kubernetes.io/group.name: test-ingress-group
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
      alb.ingress.kubernetes.io/ssl-redirect: "443"

      # Health check 설정
      alb.ingress.kubernetes.io/healthcheck-path: /
      alb.ingress.kubernetes.io/success-codes: "200"
      alb.ingress.kubernetes.io/healthcheck-interval-seconds: "30"
      alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
      alb.ingress.kubernetes.io/healthy-threshold-count: "2"
      alb.ingress.kubernetes.io/unhealthy-threshold-count: "3"

      # 도메인 설정 (필요시 수정)
      external-dns.alpha.kubernetes.io/hostname: argocd.aifordevops.store

  replicas: 2 # HA를 위해 최소 2개
  resources:
    limits:
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 128Mi
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

repoServer:
  replicas: 1 # 운영에서는 2개 이상 추천

controller:
  replicas: 1 # 운영에서는 2-3개 추천
  resources:
    limits:
      memory: 512Mi
    requests:
      cpu: 50m
      memory: 256Mi
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

redis-ha:
  enabled: false # 운영환경에서는 HA Redis 필수!

redis:
  enabled: true # redis-ha 쓸 때는 이걸 false로

